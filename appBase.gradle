def build_time = getBuildTime()

def schema = project.hasProperty("schema") ? project.ext.schema : 'default'
def versionCode = ''
def versionName = ''

println "appRes.gradle↓\n开始编译:schema:" + schema + " time->" + build_time + "\n" + osName() + "/" + userName()

//[libBase.gradle]
def childProjects = rootProject.getChildProjects()
childProjects.each {
    def application = "com.android.application"

    def projectObj = it.value
    def isApp = projectObj.plugins.hasPlugin(application)

    if (isApp) {
        def applicationPlugin = projectObj.plugins.findPlugin(application)
        //自动获取 主工程的 sdk配置信息
        //println applicationPlugin.extension.defaultConfig
        versionCode = applicationPlugin.extension.defaultConfig.versionCode
        versionName = applicationPlugin.extension.defaultConfig.versionName
    }
}

android {

    /**2023-6-27
     * 向app内注入一些资源*/
    defaultConfig {
        resValue "string", "build_time", build_time
        resValue "string", "os_name", osName()
        resValue "string", "user_name", userName()
        resValue "string", "schema", schema
        resValue "bool", "show_debug", "false"
        resValue "string", "local_ip", getLocalIp()
        resValue "string", "versionCode", '"' + versionCode + '"'
        resValue "string", "versionName", '"' + versionName + '"'

        buildConfigField "String", "USER_NAME", '"' + userName() + '"'
        buildConfigField "String", "BUILD_TIME", '"' + build_time + '"'
        buildConfigField "String", "SCHEMA", '"' + schema + '"'
    }

    //https://google.github.io/android-gradle-dsl/current/com.android.build.gradle.internal.dsl.PackagingOptions.html
    //[merge] [exclude] [pickFirst] [doNotStrip]
    packagingOptions {
        merge 'META-INF/DEPENDENCIES'
        merge 'META-INF/NOTICE'
        merge 'META-INF/LICENSE'
        merge 'META-INF/LICENSE.txt'
        merge 'META-INF/NOTICE.txt'
        merge 'META-INF/uiview_release.kotlin_module'
        merge 'META-INF/kotlin_release.kotlin_module'
        merge 'META-INF/proguard/androidx-annotations.pro'
        merge 'META-INF/LGPL2.1'

        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'

        //exclude 'META-INF/uiview_release.kotlin_module'

        //renderscript
        //pickFirst 'lib/armeabi-v7a/libRSSupport.so'
        //pickFirst 'lib/arm64-v8a/libRSSupport.so'
        //pickFirst 'lib/arm64-v8a/librsjni.so'

        //opencv
        //pickFirst 'lib/armeabi-v7a/libopencv_java4.so'
        //pickFirst 'lib/arm64-v8a/libopencv_java4.so'
    }

//    aaptOptions {
//        cruncherEnabled false
//    }

    //useLibrary 'org.apache.http.legacy'
    //https://jcenter.bintray.com/org/apache/httpcomponents/httpclient/
    //implementation 'org.apache.httpcomponents:httpclient:4.5.11'

    /*在manifest文件中加入(推荐):
    <application>
    <!-- Apache HTTP client 的相关类打包进 APK 中  -->
    <uses-library
        android:name="org.apache.http.legacy"
        android:required="false" />
    </application>
    * */
}

//apply from: allGradle.adb
//apply from: allGradle.base

apply from: "$gradleHost/master/adb.gradle"
apply from: "$gradleHost/master/base.gradle"
