/**
 * 2022-4-28
 * 用来改变Apk文件的输出路径和文件名
 * */

/**
 * 文件输出的文件夹(基于项目根目录的相对路径)
 * */
def output = project.hasProperty("apk_path") ? project.ext.apk_path : ".apk"

//APK输出文件名配置:
//可用参数: #an:app名字; #vn:版本名; #t:当天日期; #fn:风味名; #bn:编译类型名;
//         #sn:使用的签名名称; #ka:使用的签名别名;

def apkFormatName = project.hasProperty("apkName") ? project.ext.apkName : "#an-#vn_#t_#fn_#bn_#ka.apk"

def _app_name = project.hasProperty("APP_NAME") ? project.ext.APP_NAME : ((project.name != "app") ? project.name : rootProject.name)
def apk_time = apkTime()

def keyAlias = project.hasProperty("signConfig") ? signConfig.key_alias : ''

static def formatApkName(format, an, vn, t, fn, bn, sn, ka) {
    return format.replace("#an", an)
            .replace("#vn", vn)
            .replace("#t", t)
            .replace("#fn", fn)
            .replace("#bn", bn)
            .replace("#sn", sn)
            .replace("#ka", ka)
}

//https://www.jianshu.com/p/e7a40a592f15/
//构建完成后, 将文件夹(./.apk)子目录中的apk文件, 复制到上一级
gradle.buildFinished { buildResult -> /*BuildResult*/
    def apkFolder = new File(project.rootDir.absolutePath + "/" + output)
    def fileList = apkFolder.listFiles()
    for (file in fileList) {
        if (file.isDirectory()) {
            def subFileList = file.listFiles()

            def isCopyFile = new File(file, ".copy") //文件是否已经复制过
            if (!isCopyFile.exists()) {
                isCopyFile.createNewFile()
            }
            def copyFileList = []
            copyFileList = isCopyFile.readLines('UTF8')

            for (subFile in subFileList) {
                def fileName = subFile.name
                if (subFile.isFile() && fileName.endsWith(".apk")) {
                    def ignoreFile = false

                    def haveCopyFile = false

                    //是否要忽略此文件名
                    copyFileList.each {
                        haveCopyFile = haveCopyFile || it == fileName
                    }

                    ignoreFile = haveCopyFile

                    def targetFile = new File(apkFolder, fileName)
                    if (targetFile.exists() && subFile.lastModified() != targetFile.lastModified()) {
                        //如果目标文件存在, 但是和源文件时间不一样, 则强制需要复制
                        ignoreFile = false
                    }

                    if (!ignoreFile) {
                        //apk文件, 开始复制. 文件不一样的时候才复制
                        copyFile(subFile.absolutePath, targetFile.absolutePath)

                        if (!haveCopyFile) {
                            isCopyFile.append("${fileName}\n") //添加已经复制过的文件名
                        }
                    }
                }
            }
        }
    }
    println "[apk.gradle] 构建完毕->${buildResult.action}"
}